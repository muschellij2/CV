


<<echo = FALSE, results = "hide", message=FALSE, error=FALSE, warning=FALSE>>=
if (!require(cranlogs)) {
  library(devtools)
  install_github("metacran/cranlogs")
  library(cranlogs)
}
library(plyr)
first_date = "2014-01-10"
today = Sys.Date()
long_today = format(Sys.time(), "%B %d, %Y")
# packs = c("brainR", "diffr", "freesurfer", "fslr",
#           "kirby21.base", "kirby21.fmri",
#           "kirby21.t1", "matlabr", "neurobase", "neurohcp",
#           "oasis", "papayar", "rscopus", "spm12r", "WhiteStripe")
# from crandb
packs = c("brainR", "cifti", "diffr", "fedreporter", "freesurfer", "fslr",
"gcite", "gifti", "glassdoor", "kirby21.base", "kirby21.fmri",
"kirby21.t1", "matlabr", "mscstts", "neurobase", "neurohcp", "neurovault",
"papayar", "rscopus", "spm12r", "stapler", "WhiteStripe")
# from muschpack
gh = c("alvin", "biobankr",
       "dcm2niir", "dcmtk", "didactr", "flexconnr", "dhs", "drammsr",
       "extrantsr", "ggneuro", "ghtravis",
       "gluc", "greedyreg", "ichseg", "itksnapr",
       "jhudsl", "kirby21.asl", "kirby21.det2", "kirby21.dti",
       "kirby21.flair", "kirby21.mt", "kirby21.smri", "kirby21.survey",
       "kirby21.t2", "kirby21.vaso", "leanpubr", "lungct", "malf.templates", "msmri",
       "neuroc.deps", "neurocInstall", "papayaWidget",  "rcamino",
       "robex", "smri.process",
       "sri24")
# packs = c(packs, gh)
packs = sort(unique(packs))

packs = unique(packs)
dl = cran_downloads( from = first_date, to = today,
	packages = packs)
dl = ddply(dl, .(package), summarise, count = sum(count))
desc <- sapply(packs, function(x) {
  fname = system.file("DESCRIPTION", package = x)
  if (fname == "") {
    print(x)
    devtools::install_github(paste0("muschellij2/", x))
    fname = system.file("DESCRIPTION", package = x)
    # return(NULL)
  }

  read.dcf(file = fname, fields = c("Package", "Title"))
})
desc = t(desc)
colnames(desc) = c("package", "title")
desc = as.data.frame(desc, stringsAsFactors = FALSE)
dl = merge(dl, desc, by = "package", sort = FALSE)
dl = dl[ order(dl$count, decreasing = TRUE), ]
cn = dl$package
tit = dl$title
dl = dl$count
names(tit) = cn
names(dl) = cn
url_maker = function(package) {
  paste0("http://cran.r-project.org/web/packages/", package, "/index.html")
}
cv_entry = function(package) {
  #########################
  # Making it so they aren't so long
  #########################
  title = tit[package]
  title = gsub("\n", " ", title)
  title = gsub("' ", " ", title)
  title = gsub(" '", " ", title)
  title = gsub("^'", "", title)
  title = gsub("'$", "", title)
  title = gsub("\\('", "(", title)
  title = gsub("'\\)", ")", title)

  title = gsub("\\s\\s+", " ", title)
  title = trimws(title)
  nc = 60 # max number of characters in one line
  ss = strsplit(title, " ")[[1]]
  ss = c(package, ss)
  num_chars = sapply(ss, nchar)
  cs = cumsum(num_chars)
  n_line = floor(cs / nc)
  tab = table(n_line)
  # no single lines with one word #taki
  one_liner = tab == 1
  if (any(one_liner)) {
    line = as.numeric(names(tab))[one_liner]
    ind = which(n_line == line)
    n_line[ind - 1] = n_line[ind]
  }
  # take out package name (will be done with href below)
  ss = ss[-1]
  n_line = n_line[-1]
  # put it back together
  title = paste(
    tapply(ss, INDEX = n_line, paste, collapse = " "),
    collapse = " \\newline "
    )

  paste0("\\cventry{}{\\href{", url_maker(package),
         "}{", package, "}: ", title,
         "}{\\newline Downloads: ",
         dl[package], "}{}{}{}\n")
}
@

All download counts are from RStudio CRAN logs and are accurate as of \Sexpr{long_today}.
\newline

<<echo = FALSE, results = "asis", message=FALSE, error=FALSE, warning=FALSE>>=
for (icn in cn) {
  cat(cv_entry(icn))
}
@
% \cventry{CRAN}{\href{http://cran.r-project.org/web/packages/fslr/index.html}{fslr}: Wrapper functions for FSL (FMRIB Software Library) from \newline Functional MRI of the Brain (FMRIB)}{\newline Downloads: \Sexpr{dl['fslr']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/WhiteStripe/index.html}{WhiteStripe}: Whitestripe White Matter Normalization for \newline Magnetic Resonance Images}{\newline Downloads: \Sexpr{dl['WhiteStripe']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/brainR/index.html}{brainR}: Helper functions to misc3d and rgl packages for brain imaging}{\newline Downloads: \Sexpr{dl['brainR']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/matlabr/index.html}{matlabr}: R interface with calling MATLAB code without a server}{\newline Downloads: \Sexpr{dl['matlabr']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/spm12r/index.html}{spm12r}: Wrapper Functions for SPM (Statistical Parametric Mapping) Version 12 from the Wellcome Trust Centre for Neuroimaging}{\newline Downloads: \Sexpr{dl['spm12r']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/rscopus/index.html}{rscopus}: Scopus Database API Interface}{\newline Downloads: \Sexpr{dl['rscopus']}}{}{}{}
%
% \cventry{}{\href{http://cran.r-project.org/web/packages/diffr/index.html}{diffr}: Display Differences Between Two Files using the\newline Codediff JavaScript Library}{\newline Downloads: \Sexpr{dl['diffr']}}{}{}{}
%
% \Sexpr{cv_entry("neurobase")}
%
% \Sexpr{cv_entry("oasis")}

\cventry{GitHub}{\href{https://github.com/muschellij2/drammsr}{drammsr}: Port of Deformable Registration via Attribute Matching and Mutual-Saliency Weighting (\href{http://www.cbica.upenn.edu/sbia/software/dramms/}{DRAMMS}) Registration to R}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/didactr}{didactr}: Tools for Creating Automated Courses}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/flexconnr}{flexconnr}: FLEXCONN Model Wrapped in R
}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/extrantsr}{extrantsr}: Additional functionality and extensions to the \newline ANTsR R package}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/rcamino}{rcamino}: R Port of Camino Software}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/dcmniir}{dcm2niir}: R wrapper for dcm2nii DICOM converter}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/
ichseg}{ichseg}: ICH Segmentation of CT scans}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/
msseg}{msseg}: MS Lesion Segmentation}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/googleCite}{googleCite}: Scraper for Google Citations}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/processVISION}{processVISION}: Scripts for Parsing XML from VISION database}{}{}{}{}


\cventry{}{\href{https://github.com/muschellij2/sri24}{sri24}: SRI24 Atlas: Normal Adult Brain Anatomy}{}{}{}{}

\cventry{}{\href{https://github.com/muschellij2/sri24}{sri24}: SRI24 Atlas: Normal Adult Brain Anatomy}{}{}{}{}


\cventry{}{\href{https://github.com/muschellij2/leanpubr}{leanpubr}: Leanpub API Interface for R}{}{}{}{}

